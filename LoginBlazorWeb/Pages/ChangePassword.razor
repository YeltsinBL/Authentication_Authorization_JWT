@page "/ChangePassword"
@layout LoginLayout

@using LoginBlazorWeb.Models;
@using LoginBlazorWeb.Service;

@using Microsoft.AspNetCore.Components.Authorization;

@inject NavigationManager navManager
@inject IAuthService AuthService
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@Error</p>
    </div>
}

<div class="row mt-5">

    <div class="col-lg-4 offset-lg-4 border">

        <div class="mb-3 text-center">
            <h3>CREAR CUENTA</h3>
        </div>

        <div class="mb-3">
            <label>Correo</label>
            <input @bind="registerDTO.usuario" class="form-control" disabled="true" />
        </div>

        <div class="mb-3">
            <label>Contraseña</label>
            <div class="input-group">
                <input @bind="registerDTO.password" class="form-control" type="password" />
            </div>
        </div>
        <div class="mb-3">
            <label>Verificar Contraseña</label>
            <div class="input-group">
                <input @bind="registerDTO.confirmPassword" class="form-control" type="password" />
            </div>
        </div>

        <div class="mb-3">
            <button @onclick="CambiarContrasena" class="btn btn-primary">Cambiar Contraseña</button>
        </div>
        <div class="mb-3">
            <a href="/">Regresar</a>
        </div>
    </div>

</div>

@code {
    private string correo_ls = "";
    private RegisterDTO registerDTO = new RegisterDTO();

    protected override async Task OnInitializedAsync()
    {
        correo_ls = await localStorage.GetItemAsync<string>("changepassword");
        registerDTO.usuario = correo_ls;
        await base.OnInitializedAsync();
    }

    private bool ShowErrors;
    private string Error = "";
    private async Task CambiarContrasena()
    {
        ShowErrors = false;
        var result = await AuthService.CambiarContrasena(registerDTO);

        if (result.Resultado) navManager.NavigateTo("/");
        else
        {
            Error = result.Msg!;
            ShowErrors = true;
        }
    }
}